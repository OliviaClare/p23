orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 6,
seed = 1234
)
orr_trt = matrix(c(0.2, 0.2, 0.2, 0.2,
0.25, 0.45, 0.55, 0.2), nrow = 2, byrow = T)
hr_trt = c(0.95, 0.85, 0.75, 1)
medOS = medOS_ctrl/hr_trt
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp
n1_per_arm=50
n_per_arm=382
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1]
)
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1]
)
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1]
)
library(p23)
method_comb <- c("Disjoint Subjects", "Independent Incremental", "Mixture")
method_mtadjust <- c("dunnett", "simes")
maturity <- 0.7
IF <- c(0.3, 0.4, 0.5, 0.7) # information rate
# Scenario 3 --------------------------------------------------------------------
method_dose_selection="ORR"
# n1_per_arm = seq(20, 30, 5)  # stage 1 sample size choices
n1_per_arm = 75 # updated sample size
cor_orros = 1 # correlation between ORR and OS
medOS_ctrl = 30
orr_trt = matrix(c(0.2, 0.2, 0.2, 0.2,
0.25, 0.45, 0.55, 0.2), nrow = 2, byrow = T)
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*0.75)
n1_per_arm=50
n_per_arm=382
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*0.75)
medOS_ctrl = 16.7
medOS = medOS_ctrl/hr_trt
hr_trt = c(0.95, 0.85, 0.75, 1)
medOS_ctrl = 16.7
medOS = medOS_ctrl/hr_trt
n1_per_arm=50
n_per_arm=382
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*0.75)
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
nCore = 2,
seed = 1234
)
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
debugSource('R/simu.power.p23.R')
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
debugSource('R/simu.power.p23.R')
debugSource('R/TMP.R')
debugSource('R/TMP.R')
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
simu.powertest = function(nSim=10, n1 = rep(50, 4), n2 = rep(200, 2), m = c(9,9, 9, 9),
orr = c(0.25, 0.3, 0.4, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380),
alpha=0.025, sf=gsDesign::sfLDOF, multiplicity.method="simes",
method = "Independent Incremental"){
#Number of analyses in stage 2
K = length(targetEvents2)
#Number of arms
n.arms = length(n1)
# #rejection boundary by traditional GSD
# if (K == 1) {bd.z = qnorm(1-alpha)} else {
#   bd.z = gsDesign::gsDesign(k=K,alpha=alpha,timing=targetEvents2/targetEvents2[K],sfu=sf, test.type=1)$upper$bound
# }
#Combination Z values
comb.z = bd.z = matrix(NA, nrow=nSim, ncol=K)
s = rep(NA, nSim) #selected dose
n2 = c(rep(n2[1], n.arms-1), n2[2])
# calculate pre-specified weights YC ============================
e1 = matrix(rep(0,length(targetEvents2)*(n.arms-1)), nrow=length(targetEvents2))
for(k in 1:length(targetEvents2)){
e1[k,] = e1.ssr(n1 = n1, n2 = n2, m = m,
Lambda1 = Lambda1,
A1 = A1, Lambda2 = Lambda2,
enrollment.hold=enrollment.hold, targetEvents = targetEvents2[k])
}
for (i in 1:nSim){
# if(i%% 1000 == 0)
print(i)
p23i = simu.p23trial(n1 = n1, n2 = n2, m = m,
orr = orr, rho = rho, dose_selection_endpoint = dose_selection_endpoint,
Lambda1 = Lambda1, A1 = A1,
Lambda2 = Lambda2, A2 = A2, enrollment.hold=enrollment.hold)
if(i==77){
print(":hello bug!")
}
o=conduct.p23(data=p23i, DCO1=DCO1,
dose_selection_endpoint = dose_selection_endpoint,
targetEvents2 = targetEvents2, method = method,
multiplicity.method=multiplicity.method,
e1=e1)
s[i] = o$s
if(o$method=="NA"){ # deal with IA exceeds FA YC =============================
comb.z[i,]=c(NA, o$z) # must be before gsDesign function in calculating the boundary bd.z!
next
}
)
debugSource('R/TMP.R')
tmp <- simu.powertest(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
debugSource('R/TMP.R')
tmp <- simu.powertest(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
debugSource('R/TMP.R')
tmp <- simu.powertest(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
tmp <- simu.powertest(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
tmp
tmp <- simu.power.p23.parallel(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
tmp <- simu.power.p23(nSim = 100,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = medOS,
rho = cor_orros,
orr = orr_trt[2,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = "dunnett",
method = method_comb[1],
# nCore = 2,
# seed = 1234
)
