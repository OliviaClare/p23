# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 1.2, A2 = 125,
Lambda1 = function(t) {
(t/1.2) * as.numeric(t <= 1.2) + as.numeric(t > 1.2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 5.2,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
IF_i=0.4
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*IF_i)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 1.2, A2 = 125,
Lambda1 = function(t) {
(t/1.2) * as.numeric(t <= 1.2) + as.numeric(t > 1.2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 5.2,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
for(method_mt
adjust_i in method_mtadjust)
for(method_mtadjust_i in method_mtadjust)
for(medOS_ctrl_i in medOS_ctrl)
for(method_i in method_comb){
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 1.2, A2 = 125,
Lambda1 = function(t) {
(t/1.2) * as.numeric(t <= 1.2) + as.numeric(t > 1.2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 5.2,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
new_row = matrix(c(IF_i, medOS_ctrl_i, orr_trt[1], cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$actualEvents,
# tmp$bd.z,
tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
}
library(p23)
}
for(method_i in method_comb){
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 1.2, A2 = 125,
Lambda1 = function(t) {
(t/1.2) * as.numeric(t <= 1.2) + as.numeric(t > 1.2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 5.2,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
new_row = matrix(c(IF_i, medOS_ctrl_i, orr_trt[1], cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$actualEvents,
# tmp$bd.z,
tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
}
for(method_i in method_comb){
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 1.2, A2 = 125,
Lambda1 = function(t) {
(t/1.2) * as.numeric(t <= 1.2) + as.numeric(t > 1.2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 5.2,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i
)
new_row = matrix(c(IF_i, medOS_ctrl_i, orr_trt[1], cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$actualEvents,
# tmp$bd.z,
tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
}
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
library(p23)
seedo = 123
nSims = 10
n_per_arm = 200 # sample size for selected arm and control arm
method_comb <- c("Disjoint Subjects", "Independent Incremental", "Mixture")
method_mtadjust <- c("dunnett", "simes")
maturity <- 0.7
IF <- 0.4 # information rate
# Scenario 3 --------------------------------------------------------------------
method_dose_selection="ORR"
# n1_per_arm = seq(20, 30, 5)  # stage 1 sample size choices
n1_per_arm = 75 # updated sample size
cor_orros = 1 # correlation between ORR and OS
medOS_ctrl = 10
orr_trt = rep(0.1,4)
# enrollment_month = matrix(c(12,10, 60, 50, 3, 2.5), nrow=3, byrow = T)
#
# for(em_i in 1:3)
for(IF_i in IF){
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*IF_i)
file.path = paste0("Results/Scenarios_type1error_extremelyfast_enrollment", "Seed", seedo, "date_2025-03-16", ".csv")
for(method_mtadjust_i in method_mtadjust)
for(medOS_ctrl_i in medOS_ctrl)
for(method_i in method_comb){
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
new_row = matrix(c(IF_i, medOS_ctrl_i, orr_trt[1], cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$actualEvents,
# tmp$bd.z,
tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
}
}
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
# nCore = 4,
# seed = seedo
)
dat23 %>%
arrange(calendarTime) %>%               # Sort by time
dplyr::filter(cnsr == 0) %>%
mutate(nevents=cumsum(cnsr==0)) %>%
filter(nevents<= targetEvents2[length(targetEvents2)]) %>% max()
dat23 %>%
arrange(calendarTime) %>%               # Sort by time
dplyr::filter(cnsr == 0) %>%
mutate(nevents=cumsum(cnsr==0)) %>%
filter(nevents<= targetEvents2[length(targetEvents2)])
dat23 %>%
arrange(calendarTime) %>%               # Sort by time
dplyr::filter(cnsr == 0) %>%
mutate(nevents=cumsum(cnsr==0)) %>%
filter(nevents<= targetEvents2[length(targetEvents2)]) %>% max(calendarTime)
dat.FA <- dat23 %>%
arrange(calendarTime) %>%               # Sort by time
dplyr::filter(cnsr == 0) %>%
mutate(nevents=cumsum(cnsr==0)) %>%
filter(nevents<= targetEvents2[length(targetEvents2)])
dat.FA %>%
filter(stage==1) %>% nrow()
View(dat.FA)
library(p23)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
# nCore = 4,
# seed = seedo
)
# set.seed(123)
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt,
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 2, A2 = 125,
Lambda1 = function(t) {
(t/2) * as.numeric(t <= 2) + as.numeric(t > 2)
},
Lambda2 = function(t) {
(t/125) * as.numeric(t <= 125) + as.numeric(t > 125)
},
enrollment.hold = 5,
DCO1 = 6,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = 4,
seed = seedo
)
tmp
85/12
