n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
tmp <- simu.power.p23(nSim = 10000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
tmp <- simu.power.p23(nSim = 10000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
View(p23i)
p23_995= p23i = simu.p23trial(n1 = n1, n2 = n2, m = m,
orr = orr, rho = rho, dose_selection_endpoint = dose_selection_endpoint,
Lambda1 = Lambda1, A1 = A1,
Lambda2 = Lambda2, A2 = A2, enrollment.hold=enrollment.hold)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
tmp <- simu.power.p23(nSim = 10000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
set.seed(42)
tmp <- simu.power.p23(nSim = 10000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
tmp
set.seed(123)
tmp <- simu.power.p23(nSim = 10000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
medOS_ctrl = c(30,5)
orr_trt = matrix(c(0.2, 0.2, 0.2, 0.2,
0.4, 0.4, 0.4, 0.4), nrow = 2, byrow = T)
medOS_ctrl = 30
for(IF_i in IF){
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*IF_i)
file.path = paste0("Scenarios_IA30", "Seed", seedo, "date_2024-12-02", ".csv")
for(method_mtadjust_i in method_mtadjust)
for(medOS_ctrl_i in medOS_ctrl)
for (orr_i in 1)
for(method_i in method_comb){
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = nCores,
seed = seedo
)
# cum.pow.all = rbind(cum.pow.all, tmp$cum.pow)
# bd.z.all = rbind(bd.z.all, tmp$bd.z)
# gen.pow.all = rbind(gen.pow.all, tmp$generalized.pow)
# selection.all = rbind(selection.all, tmp$selection)
# re.all <- rbind(re.all, cbind(method_dose_selection, method_i, n1_per_arm,
#                               gen.pow.all, selection.all, bd.z.all, cum.pow.all))
# colnames(re.all)[4:12] = c("gen.pow.IA", "gen.pow.FA",
#                            "selection.dose1", "selection.dose2", "selection.dose3",
#                            "bd.z.IA", "bd.z.FA", "cum.pow.IA", "cum.pow.FA" )
new_row = matrix(c( medOS_ctrl_i, orr_i, cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$bd.z, tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
# save(re.all, file=paste0("Results/Scenario1_",method_dose_selection, method_i, "Seed", seedo, "date_", Sys.Date(), ".RData"))
}
}
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
nCores = 6
seedo = 123
nSims = 100000
n_per_arm = 200 # sample size for selected arm and control arm
method_comb <- c("Disjoint Subjects", "Independent Incremental", "Mixture")
method_mtadjust <- c("dunnett", "simes")
maturity <- 0.7
IF <- c(0.3, 0.4, 0.5, 0.7) # information rate
# Scenario 3 --------------------------------------------------------------------
method_dose_selection="ORR"
# n1_per_arm = seq(20, 30, 5)  # stage 1 sample size choices
n1_per_arm = 75 # updated sample size
cor_orros = 1 # correlation between ORR and OS
medOS_ctrl = 30
orr_trt = matrix(c(0.2, 0.2, 0.2, 0.2,
0.4, 0.4, 0.4, 0.4), nrow = 2, byrow = T)
for(IF_i in IF){
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*IF_i)
file.path = paste0("Scenarios_medOS30", "Seed", seedo, "date_2024-12-02", ".csv")
for(method_mtadjust_i in method_mtadjust)
for(medOS_ctrl_i in medOS_ctrl)
for (orr_i in 1)
for(method_i in method_comb){
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = nCores,
seed = seedo
)
# cum.pow.all = rbind(cum.pow.all, tmp$cum.pow)
# bd.z.all = rbind(bd.z.all, tmp$bd.z)
# gen.pow.all = rbind(gen.pow.all, tmp$generalized.pow)
# selection.all = rbind(selection.all, tmp$selection)
# re.all <- rbind(re.all, cbind(method_dose_selection, method_i, n1_per_arm,
#                               gen.pow.all, selection.all, bd.z.all, cum.pow.all))
# colnames(re.all)[4:12] = c("gen.pow.IA", "gen.pow.FA",
#                            "selection.dose1", "selection.dose2", "selection.dose3",
#                            "bd.z.IA", "bd.z.FA", "cum.pow.IA", "cum.pow.FA" )
new_row = matrix(c( medOS_ctrl_i, orr_i, cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$bd.z, tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
# save(re.all, file=paste0("Results/Scenario1_",method_dose_selection, method_i, "Seed", seedo, "date_", Sys.Date(), ".RData"))
}
}
nCores = 6
seedo = 123
nSims = 100000
n_per_arm = 200 # sample size for selected arm and control arm
method_comb <- c("Disjoint Subjects", "Independent Incremental", "Mixture")
method_mtadjust <- c("dunnett", "simes")
maturity <- 0.7
IF <- c(0.3, 0.4, 0.5, 0.7) # information rate
# Scenario 3 --------------------------------------------------------------------
method_dose_selection="ORR"
# n1_per_arm = seq(20, 30, 5)  # stage 1 sample size choices
n1_per_arm = 75 # updated sample size
cor_orros = 1 # correlation between ORR and OS
medOS_ctrl = 30
orr_trt = matrix(c(0.2, 0.2, 0.2, 0.2,
0.4, 0.4, 0.4, 0.4), nrow = 2, byrow = T)
for(IF_i in IF){
targetEventsFA_all <- round(n_per_arm*2*maturity)
targetEventsIA_all <- round(targetEventsFA_all*IF_i)
file.path = paste0("Scenarios_medOS30", "Seed", seedo, "date_2024-12-02", ".csv")
for(method_mtadjust_i in method_mtadjust)
for(medOS_ctrl_i in medOS_ctrl)
for (orr_i in 1)
for(method_i in method_comb){
# re.all <- c()
# cum.pow.all <- bd.z.all <- gen.pow.all <- selection.all <- c()
tmp <- simu.power.p23.parallel(nSim = nSims,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_i,
nCore = nCores,
seed = seedo
)
# cum.pow.all = rbind(cum.pow.all, tmp$cum.pow)
# bd.z.all = rbind(bd.z.all, tmp$bd.z)
# gen.pow.all = rbind(gen.pow.all, tmp$generalized.pow)
# selection.all = rbind(selection.all, tmp$selection)
# re.all <- rbind(re.all, cbind(method_dose_selection, method_i, n1_per_arm,
#                               gen.pow.all, selection.all, bd.z.all, cum.pow.all))
# colnames(re.all)[4:12] = c("gen.pow.IA", "gen.pow.FA",
#                            "selection.dose1", "selection.dose2", "selection.dose3",
#                            "bd.z.IA", "bd.z.FA", "cum.pow.IA", "cum.pow.FA" )
new_row = matrix(c( medOS_ctrl_i, orr_i, cor_orros, method_dose_selection,
method_i, method_mtadjust_i, n1_per_arm,
tmp$cum.pow, tmp$bd.z, tmp$generalized.pow,
tmp$selection), nrow=1)
write.table(
new_row,
file = file.path,
append = TRUE,
sep = ",",
col.names = FALSE,  # Set to FALSE to avoid duplicating column names
row.names = FALSE
)
# save(re.all, file=paste0("Results/Scenario1_",method_dose_selection, method_i, "Seed", seedo, "date_", Sys.Date(), ".RData"))
}
}
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
# target power: 0.9
# HR: 0.7
# no SSR
detach("package:p23")
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
detach("package:p23")
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
simu.p23trial(n1 = n1, n2 = n2, m = m,
orr = orr, rho = rho, dose_selection_endpoint = dose_selection_endpoint,
Lambda1 = Lambda1, A1 = A1,
Lambda2 = Lambda2, A2 = A2, enrollment.hold=enrollment.hold)
o
targetEvents2
o$z.tilde
gsDesign::gsDesign(k=K,alpha=alpha,timing=o$actualEvents/o$actualEvents[K],sfu=sf, test.type=1)$upper$bound
gsDesign::gsDesign(k=K,alpha=alpha,timing=o$actualEvents/o$actualEvents[K],sfu=sf, test.type=1)$upper$bound
o$actualEvents
K
ksf
dg
sf
o$actualEvents/o$actualEvents[K]
K
?gsDesign::gsDesign
detach("package:p23")
set.seed(12345)
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
detach("package:p23")
set.seed(12345)
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
detach("package:p23")
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
o
set.seed(12345)
tmp <- simu.power.p23(nSim = 100000,
n1=rep(n1_per_arm, 4),
n2=rep((n_per_arm-n1_per_arm), 2),
m = rep(medOS_ctrl_i,4),
rho = cor_orros,
orr = orr_trt[orr_i,],
dose_selection_endpoint = method_dose_selection,
# default lambda
A1 = 12, A2 = 8,
Lambda2 = function(t) {
(t/8) * as.numeric(t <= 8) + as.numeric(t > 8)
},
enrollment.hold = 0,
DCO1 = 12,
targetEvents2 = c(targetEventsIA_all, targetEventsFA_all),
multiplicity.method = method_mtadjust_i,
method = method_comb[3]
)
z=matrix(rnorm(10),ncol=2)
z
bd.z=matrix(rnorm(10),ncol=2)
z>bd.z
colMeans(z>bd.z, na.rm=T)
bd.z
100%10
100%%10
