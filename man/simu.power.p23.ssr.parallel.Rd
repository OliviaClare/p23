% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu.power.p23.ssr.parallel.R
\name{simu.power.p23.ssr.parallel}
\alias{simu.power.p23.ssr.parallel}
\title{Power Calculation by Simulations for Phase 2/3 Inferential Seamless Design with Sample Size Adjustment}
\usage{
simu.power.p23.ssr.parallel(
  nSim = 10,
  n1 = rep(50, 4),
  n2 = rep(200, 2),
  m = c(9, 9, 9, 9),
  orr = c(0.25, 0.3, 0.4, 0.2),
  rho = 0.7,
  dose_selection_endpoint = "ORR",
  ssr_HR_threshold = 0.8,
  events_increase = 30,
  Lambda1 = function(t) {
     (t/12) * as.numeric(t <= 12) + as.numeric(t > 12)
 },
  A1 = 12,
  Lambda2 = function(t) {
     (t/12) * as.numeric(t <= 12) + as.numeric(t > 12)
 },
  A2 = 12,
  enrollment.hold = 4,
  DCO1 = 16,
  targetEvents2 = c(300, 380),
  alpha = 0.025,
  sf = gsDesign::sfLDOF,
  multiplicity.method = "simes",
  method = "Independent Incremental",
  nCore = NULL,
  seed = 123
)
}
\arguments{
\item{nSim}{Number of simulated trials}

\item{n1}{Stage 1 sample size of each dose and control arm. length(n1) must be number of arms.}

\item{n2}{Stage 2 Sample size of the selected dose and control arm. length(n2) must be 2.}

\item{m}{Median survival time for each arm (dose 1, dose 2, ..., control). length(m) must be equal to length(n1)}

\item{orr}{ORR for each arm. length(orr) = length(m).}

\item{rho}{Correlation between ORR and time to event endpoint}

\item{dose_selection_endpoint}{Dose selection end point: "ORR" or "not ORR"}

\item{ssr_HR_threshold}{The threshold in HR for sample size (target events) increase at first analysis in Stage 2.}

\item{events_increase}{Number of events increased to the original target number of events at final analysis when the HR crosses the threshold at IA}

\item{Lambda1}{Enrollment distribution function (CDF) for stage 1.}

\item{A1}{Enrollment period for Stage 1}

\item{Lambda2}{Enrollment distribution function (CDF) for stage 2.}

\item{A2}{Enrollment period for Stage 2}

\item{enrollment.hold}{Holding period in months after DCO1 of Stage 1 prior to enrollment of Stage 2 patients. 0 means seamless enrollment.}

\item{DCO1}{Data cutoff date for Stage 1}

\item{targetEvents2}{Originally planned target number of events for Stage 2. Only allow 1 IA. length(targetEvents2) must be 2.}

\item{alpha}{Type I error (one-sided) for testing the selected dose, usually 0.025.}

\item{sf}{Spending functions. acceptable options include all spending functions in gsDesign R package, for example, "gsDesign::sfLDOF"}

\item{multiplicity.method}{"simes" or "Dunnett"}

\item{method}{Options include "Independent Incremental": z1 at dose selection and z2 is from dose selection to kth analysis at stage 2;
"Disjoint Subjects": z1 is at kth analysis for stage 1 subjects; z2 is at the kth analysis for stage 2 subjects. z1 will be adjusted by multiplicity and closed testing procedure at each analysis.
"Mixture": Only consider disjoint subjects at first analysis in stage 2. Starting from the 2nd analysis, consider independent incremental methods. Only z1 at 1st analysis will be adjusted by multiplicity and closed testing procedure.}

\item{nCore}{Number of cores distributed for simulation;}

\item{seed}{An integer, or nCore number of integers as random seed for reproducibility;}
}
\value{
An object with values:
\describe{
\item{bd.z}{z value rejection boundary at each analysis}
\item{cum.pow}{Cumulative power}
\item{s}{Selected dose}
\item{selection}{Probability of selection among doses}
}
}
\description{
This functions calculates the cumulative power by Simulations for Phase 2/3 Inferential Seamless Design with Sample Size Adjustment.
The SSR is only performed at the first interim analysis at Stage 2. Regarding the pre-fixed weights for the FA combination Z,
(1) If the method is independent incremental, then weight maintains is based on the information fraction as in the original target events.
(2) If the method is disjoint subjects, then the weight is calculated based on the expected number of events for Stage 1 subjects
at final analysis relative to the original target events at FA. (3) If the method is mixture, then
the weight for FA is same as the independent increment method.
}
\examples{
#Example (1): Stage 1: 4 arms; 3 dose levels; each arm 50 patients.
#Stage 2: additional 200 patients per arm will be enrolled at stage 2
#medians for the 4 arms: 9, 11, 13 and control = 8 months
#Enrollment: 12 months uniform in stage 1; 12 months uniform in stage 2
#Holding period: 4 months between stage 1 and 2
#Dose selection will be based on data cut at 16 months
#Stage 2 has 2 planned analyses at 300 and 380 events respectively.
#At 1st analysis in Stage 2, the target number of events will increase 30 
when the observed HR > 0.8.

#Dose selection decision is NOT based on ORR.
simu.power.p23.ssr(nSim=10, n1 = rep(50, 4), n2 = rep(200, 2), m = c(9, 9, 9, 9), 
orr = NULL, rho = NULL, dose_selection_endpoint = "not ORR",
ssr_HR_threshold = 0.8, events_increase = 30,
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Independent Incremental")

#Example (2): #Dose selection decision based on ORR
simu.power.p23.ssr(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.4, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
ssr_HR_threshold = 0.8, events_increase = 30,
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Independent Incremental")

simu.power.p23.ssr(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
ssr_HR_threshold = 0.8, events_increase = 30,
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Disjoint Subjects")

simu.power.p23.ssr(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
ssr_HR_threshold = 0.8, events_increase = 30,
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A1 = 12,
Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, A2 = 12,
enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), sf=gsDesign::sfLDOF, 
alpha=0.025, method = "Mixture")

simu.power.p23.ssr(nSim=10, n1 = rep(50, 4), n2 = rep(200, 4), m = c(9, 9, 9, 9), 
orr = c(0.25, 0.3, 0.3, 0.2), rho = 0.7, dose_selection_endpoint = "ORR",
ssr_HR_threshold = 0.8, events_increase = 30,
Lambda1 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A1 = 12,Lambda2 = function(t){(t/12)*as.numeric(t<= 12) + as.numeric(t > 12)}, 
A2 = 12,enrollment.hold=4, DCO1 = 16, targetEvents2=c(300, 380), 
sf=gsDesign::sfLDOF, alpha=0.025, multiplicity.method = "dunnett", 
method = "Disjoint Subjects")

}
